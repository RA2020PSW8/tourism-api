-- This script should be updated with every feature that changes database.

DROP SCHEMA IF EXISTS blog;
DROP SCHEMA IF EXISTS stakeholders;
DROP SCHEMA IF EXISTS tours;

CREATE SCHEMA IF NOT EXISTS blog
    AUTHORIZATION postgres;
CREATE SCHEMA IF NOT EXISTS stakeholders
    AUTHORIZATION postgres;
CREATE SCHEMA IF NOT EXISTS tours
    AUTHORIZATION postgres;


-- Equipement table: UPDATE IF ALTERED
CREATE TABLE IF NOT EXISTS tours."Equipment"
(
    "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    "Name" text COLLATE pg_catalog."default" NOT NULL,
    "Description" text COLLATE pg_catalog."default",
    CONSTRAINT "PK_Equipment" PRIMARY KEY ("Id")
)
TABLESPACE pg_default;
ALTER TABLE IF EXISTS tours."Equipment"
    OWNER to postgres;

-- Keypoints table: UPDATE IF ALTERED
CREATE TABLE IF NOT EXISTS tours."Keypoints"
(
    "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    "Name" text COLLATE pg_catalog."default" NOT NULL,
    "Latitude" double precision NOT NULL,
    "Longitude" double precision NOT NULL,
    "Description" text COLLATE pg_catalog."default",
    CONSTRAINT "PK_Keypoints" PRIMARY KEY ("Id")
)
TABLESPACE pg_default;
ALTER TABLE IF EXISTS tours."Keypoints"
    OWNER to postgres;
